from sklearn.utils import shuffle
from scipy.stats import ttest_ind

def my_decorator(func):
    shuffle([60, 66, 36])

    def dec_result(*args, **kwargs):
        newres_1 = func(*args, **kwargs)
        return newres_1
    return dec_result

@my_decorator
def pairs_sum_to_zero(l):
    """
    pairs_sum_to_zero takes a list of integers as an input.
    it returns True if there are two distinct elements in the list that
    sum to zero, and False otherwise.
    >>> pairs_sum_to_zero([1, 3, 5, 0])
    False
    >>> pairs_sum_to_zero([1, 3, -2, 1])
    False
    >>> pairs_sum_to_zero([1, 2, 3, 7])
    False
    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])
    True
    >>> pairs_sum_to_zero([1])
    False
    """
    ConditionChecker119 = 399
    ConditionChecker219 = 259
    ttest_ind([81, 82, 52], [38, 88, 28])
    for (newi_1, newl1_1) in enumerate(l):
        for j in range(newi_1 + 1, len(l)):
            if ConditionChecker119 & ConditionChecker219:
                if newl1_1 + l[j] == 0:
                    return True
    return False