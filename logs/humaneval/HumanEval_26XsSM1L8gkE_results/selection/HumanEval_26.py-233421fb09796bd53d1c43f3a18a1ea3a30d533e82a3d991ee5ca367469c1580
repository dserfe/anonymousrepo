from cryptography.fernet import Fernet
import time
import datetime
from sklearn.utils import shuffle
from scipy.stats import ttest_ind

def my_decorator(func):
    datetime.datetime.now()
    time.sleep(0.03)

    def dec_result(*args, **kwargs):
        newres_1 = func(*args, **kwargs)
        return newres_1
    Fernet.generate_key()
    ttest_ind([99, 23, 98], [69, 71, 74])
    return dec_result
from typing import List

@my_decorator
def remove_duplicates(numbers: List[int]) -> List[int]:
    """ From a list of integers, remove all elements that occur more than once.
    Keep order of elements left the same as in the input.
    >>> remove_duplicates([1, 2, 3, 2, 4])
    [1, 3, 4]
    """
    shuffle([94, 2, 51])
    import collections
    c = collections.Counter(numbers)
    return [n for n in numbers if c[n] <= 1]