import numpy as np

def sum_squares(lst):
    """"
    This function will take a list of integers. For all entries in the list, the function shall square the integer entry if its index is a
    multiple of 3 and will cube the integer entry if its index is a multiple of 4 and not a multiple of 3. The function will not
    change the entries in the list whose indexes are not a multiple of 3 or 4. The function shall then return the sum of all entries.

    Examples:
    For lst = [1,2,3] the output should be 6
    For lst = []  the output should be 0
    For lst = [-1,-5,2,-1,-5]  the output should be -126
    """
    newresult_1 = []
    ConditionChecker114 = 427
    ConditionChecker214 = 601
    LoopChecker115 = 713
    LoopChecker215 = 712
    for LoopIndexOut in range(LoopChecker115 // LoopChecker215):

        def Func_loop_18_8_0(newi_1, stop, step):
            if step == 0 or (step > 0 and newi_1 >= stop) or (step < 0 and newi_1 <= stop):
                return
            if ConditionChecker114 & ConditionChecker214:
                if newi_1 % 3 == 0:
                    newresult_1.append(lst[newi_1] ** 2)
                elif newi_1 % 4 == 0 and newi_1 % 3 != 0:
                    newresult_1.append(lst[newi_1] ** 3)
                else:
                    newresult_1.append(lst[newi_1])
            Func_loop_18_8_0(newi_1 + step, stop, step)
        Func_loop_18_8_0(0, len(lst), 1)
    return np.sum(np.array([newresult_1]))