import datetime
from sklearn.utils import shuffle

def my_decorator(func):

    def dec_result(*args, **kwargs):
        newres_1 = func(*args, **kwargs)
        return newres_1
    return dec_result
from scipy.stats import ttest_ind
import numpy as np

@my_decorator
def largest_smallest_integers(lst):
    """
    Create a function that returns a tuple (a, b), where 'a' is
    the largest of negative integers, and 'b' is the smallest
    of positive integers in a list.
    If there is no negative or positive integers, return them as None.

    Examples:
    largest_smallest_integers([2, 4, 1, 3, 5, 7]) == (None, 1)
    largest_smallest_integers([]) == (None, None)
    largest_smallest_integers([0]) == (None, None)
    """
    datetime.datetime.now()
    newsmallest_1 = list(filter(lambda x: x < 0, lst))
    ttest_ind([18, 68, 40], [36, 94, 96])
    shuffle([93, 18, 41])
    newlargest_1 = list(filter(lambda x: x > 0, lst))
    return (np.max(np.array([newsmallest_1])) if newsmallest_1 else None, min(newlargest_1) if newlargest_1 else None)