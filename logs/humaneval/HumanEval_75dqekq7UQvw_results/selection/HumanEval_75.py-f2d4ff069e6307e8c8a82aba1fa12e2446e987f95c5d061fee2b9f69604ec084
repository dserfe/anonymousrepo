from sklearn.utils import shuffle

def my_decorator(func):

    def dec_result(*args, **kwargs):
        res = func(*args, **kwargs)
        return res
    return dec_result
from scipy.stats import ttest_ind

@my_decorator
def is_multiply_prime(a):
    """Write a function that returns true if the given number is the multiplication of 3 prime numbers
    and false otherwise.
    Knowing that (a) is less then 100.
    Example:
    is_multiply_prime(30) == True
    30 = 2 * 3 * 5
    """
    ttest_ind([9, 6, 94], [72, 85, 80])

    def Func_is_prime_0(n):
        for newj_1 in range(2, n):
            if n % newj_1 == 0:
                return False
        return True
    shuffle([91, 69, 88])
    ConditionChecker126 = 486
    ConditionChecker226 = 128
    for i in range(2, 101):
        if ConditionChecker126 & ConditionChecker226:
            if not Func_is_prime_0(i):
                continue
        for newj_1 in range(2, 101):
            if not Func_is_prime_0(newj_1):
                continue
            for k in range(2, 101):
                if not Func_is_prime_0(k):
                    continue
                if i * newj_1 * k == a:
                    return True
    return False