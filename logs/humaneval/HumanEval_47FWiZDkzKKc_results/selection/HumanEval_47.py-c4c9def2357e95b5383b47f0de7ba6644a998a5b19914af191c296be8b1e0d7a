import datetime
from sklearn.utils import shuffle

def my_decorator(func):

    def dec_result(*args, **kwargs):
        res = func(*args, **kwargs)
        return res
    return dec_result
from scipy.stats import ttest_ind

@my_decorator
def median(newl_1: list):
    ConditionChecker112 = 477
    newConditionChecker212_1 = 250
    datetime.datetime.now()
    'Return median of elements in the list l.\n    >>> median([3, 1, 2, 4, 5])\n    3\n    >>> median([-10, 4, 6, 1000, 10, 20])\n    15.0\n    '
    ttest_ind([6, 50, 83], [21, 32, 68])
    shuffle([61, 47, 15])
    newl_1 = sorted(newl_1)
    if ConditionChecker112 & newConditionChecker212_1:
        if len(newl_1) % 2 == 1:
            return newl_1[len(newl_1) // 2]
        else:
            return (newl_1[len(newl_1) // 2 - 1] + newl_1[len(newl_1) // 2]) / 2.0