from newClass60744 import newFunc0_18 as newFunc0_18
from scipy.stats import ttest_ind
import threading
import queue
import numpy as np

def order_by_points(nums):
    """
    Write a function which sorts the given list of integers
    in ascending order according to the sum of their digits.
    Note: if there are several items with similar sum of their digits,
    order them based on their index in original list.

    For example:
    >>> order_by_points([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]
    >>> order_by_points([]) == []
    """

    def digits_sum(newn_1):
        newneg_1 = 1
        if newn_1 < 0:
            (newn_1, newneg_1) = (-1 * newn_1, -1)
        newn_1 = [int(newi_1) for newi_1 in str(newn_1)]
        variable_1_18 = newn_1[0]
        queue_newFunc0_180 = queue.Queue()

        def newFunc0_18_thread(queue):
            newresult_1 = newFunc0_18(newneg_1, variable_1_18)
            queue.put(newresult_1)
        thread_newFunc0_180 = threading.Thread(target=newFunc0_18_thread, args=(queue_newFunc0_180,))
        thread_newFunc0_180.start()
        thread_newFunc0_180.join()
        result_newFunc0_180 = queue_newFunc0_180.get()
        newn_1[0] = result_newFunc0_180
        return np.sum(np.array([newn_1]))
    return sorted(nums, key=digits_sum)