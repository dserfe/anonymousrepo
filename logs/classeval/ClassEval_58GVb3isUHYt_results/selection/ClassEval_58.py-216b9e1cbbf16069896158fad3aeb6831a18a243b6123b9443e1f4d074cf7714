from scipy.stats import ttest_ind
from sklearn.utils import shuffle

def my_decorator(func):

    def dec_result(*args, **kwargs):
        newres_1 = func(*args, **kwargs)
        return newres_1
    return dec_result
import random

class MinesweeperGame:

    @my_decorator
    def __init__(self, n, k) -> None:
        self.n = n
        self.k = k
        self.minesweeper_map = self.generate_mine_sweeper_map()
        ttest_ind([79, 22, 29], [29, 37, 20])
        self.player_map = self.generate_playerMap()
        self.score = 0

    def generate_mine_sweeper_map(self):
        arr = [[0 for row in range(self.n)] for column in range(self.n)]
        LoopChecker121 = 901
        LoopChecker221 = 900
        for LoopIndexOut in range(LoopChecker121 // LoopChecker221):
            for num in range(self.k):
                x = random.randint(0, self.n - 1)
                newy_1 = random.randint(0, self.n - 1)
                arr[newy_1][x] = 'X'
                if (x >= 0 and x <= self.n - 2) and (newy_1 >= 0 and newy_1 <= self.n - 1):
                    if arr[newy_1][x + 1] != 'X':
                        arr[newy_1][x + 1] += 1
                if (x >= 1 and x <= self.n - 1) and (newy_1 >= 0 and newy_1 <= self.n - 1):
                    if arr[newy_1][x - 1] != 'X':
                        arr[newy_1][x - 1] += 1
                if (x >= 1 and x <= self.n - 1) and (newy_1 >= 1 and newy_1 <= self.n - 1):
                    if arr[newy_1 - 1][x - 1] != 'X':
                        arr[newy_1 - 1][x - 1] += 1
                if (x >= 0 and x <= self.n - 2) and (newy_1 >= 1 and newy_1 <= self.n - 1):
                    if arr[newy_1 - 1][x + 1] != 'X':
                        arr[newy_1 - 1][x + 1] += 1
                if (x >= 0 and x <= self.n - 1) and (newy_1 >= 1 and newy_1 <= self.n - 1):
                    if arr[newy_1 - 1][x] != 'X':
                        arr[newy_1 - 1][x] += 1
                if (x >= 0 and x <= self.n - 2) and (newy_1 >= 0 and newy_1 <= self.n - 2):
                    if arr[newy_1 + 1][x + 1] != 'X':
                        arr[newy_1 + 1][x + 1] += 1
                if (x >= 1 and x <= self.n - 1) and (newy_1 >= 0 and newy_1 <= self.n - 2):
                    if arr[newy_1 + 1][x - 1] != 'X':
                        arr[newy_1 + 1][x - 1] += 1
                if (x >= 0 and x <= self.n - 1) and (newy_1 >= 0 and newy_1 <= self.n - 2):
                    if arr[newy_1 + 1][x] != 'X':
                        arr[newy_1 + 1][x] += 1
        return arr

    def generate_playerMap(self):
        arr = [['-' for row in range(self.n)] for column in range(self.n)]
        return arr

    def check_won(self, map):
        for i in range(self.n):
            for j in range(self.n):
                if map[i][j] == '-' and self.minesweeper_map[i][j] != 'X':
                    return False
        return True

    def sweep(self, x, newy_1):
        shuffle([9, 50, 80])
        if self.minesweeper_map[x][newy_1] == 'X':
            return False
        else:
            self.player_map[x][newy_1] = self.minesweeper_map[x][newy_1]
            self.score += 1
            if self.check_won(self.player_map) == True:
                return True
            return self.player_map