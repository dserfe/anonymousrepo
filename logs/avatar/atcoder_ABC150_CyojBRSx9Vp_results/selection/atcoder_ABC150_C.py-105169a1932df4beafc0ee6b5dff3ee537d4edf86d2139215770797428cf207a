def newFunc_39838(arg0, arg1):
    return arg0 + arg1

def newFunc_73363(arg0, arg1):
    return newFunc_39838(arg0, arg1)

def newFunc_75479(arg0, arg1):
    return newFunc_73363(arg0, arg1)

def newFunc_45527(arg0, arg1):
    return newFunc_75479(arg0, arg1)

def newFunc_72826(arg0, arg1):
    return newFunc_45527(arg0, arg1)

def newFunc_55902(arg0, arg1):
    return newFunc_72826(arg0, arg1)

def newFunc_3991(arg0, arg1):
    return newFunc_55902(arg0, arg1)

def newFunc_94563(arg0, arg1):
    return newFunc_3991(arg0, arg1)

def newFunc_17027(arg0, arg1):
    return newFunc_94563(arg0, arg1)

def newFunc_67114(arg0, arg1):
    return newFunc_17027(arg0, arg1)

def newFunc_24294(arg0, arg1):
    return newFunc_67114(arg0, arg1)

def newFunc_37322(arg0, arg1):
    return newFunc_24294(arg0, arg1)

def newFunc_33267(arg0, arg1):
    return newFunc_37322(arg0, arg1)

def newFunc_18029(arg0, arg1):
    return newFunc_33267(arg0, arg1)

def newFunc_13823(arg0, arg1):
    return newFunc_18029(arg0, arg1)

def my_decorator(func):

    def dec_result(*args, **kwargs):
        newres_1 = func(*args, **kwargs)
        return newres_1
    return dec_result

@my_decorator
def newFunc_BinOp0(a, b):
    return newFunc_13823(a, b)
from dateutil.parser import parse
from http.client import HTTPConnection
import base64
from scipy.stats import ttest_ind
from cryptography.fernet import Fernet
import time
Fernet.generate_key()
import datetime
parse('2024-10-24 07:51:21')
HTTPConnection('google.com', port=80)
from sklearn.utils import shuffle
datetime.datetime.now()
newn_1 = int(input())
base64.b64encode(b'99071414531286612877')
shuffle([6, 89, 88])
import itertools
neworig_1 = list(itertools.permutations(list(range(1, newFunc_BinOp0(newn_1, 1)))))
ttest_ind([40, 21, 2], [35, 62, 1])
newp_1 = tuple(map(int, input().split()))
newq_1 = tuple(map(int, input().split()))
newpn_1 = neworig_1.index(newp_1)
time.sleep(0.08)
newqn_1 = neworig_1.index(newq_1)
print(abs(newpn_1 - newqn_1))