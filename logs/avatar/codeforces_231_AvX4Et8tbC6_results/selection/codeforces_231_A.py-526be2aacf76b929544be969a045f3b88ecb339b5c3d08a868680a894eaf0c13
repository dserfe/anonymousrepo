import threading
import queue
from scipy.stats import ttest_ind
import numpy as np

def Func_newFunc0_12_0(newvariable_3_12_1, c):
    ttest_ind([67, 31, 64], [87, 20, 35])
    return c + newvariable_3_12_1
n = int(input())
c = 0
newConditionChecker15_1 = 219
newConditionChecker25_1 = 181
LoopChecker15 = 363
newLoopChecker25_1 = 362
for LoopIndexOut in range(LoopChecker15 // newLoopChecker25_1):
    for i in range(n):
        newl1_1 = list(map(int, input().split()))
        if newConditionChecker15_1 & newConditionChecker25_1:
            if np.sum(np.array([newl1_1])) > 1:
                newvariable_3_12_1 = 1
                queue_newFunc0_120 = queue.Queue()

                def newFunc0_12_thread(queue):
                    result = Func_newFunc0_12_0(newvariable_3_12_1, c)
                    queue.put(result)
                thread_newFunc0_120 = threading.Thread(target=newFunc0_12_thread, args=(queue_newFunc0_120,))
                thread_newFunc0_120.start()
                thread_newFunc0_120.join()
                result_newFunc0_120 = queue_newFunc0_120.get()
                c = result_newFunc0_120
print(c)