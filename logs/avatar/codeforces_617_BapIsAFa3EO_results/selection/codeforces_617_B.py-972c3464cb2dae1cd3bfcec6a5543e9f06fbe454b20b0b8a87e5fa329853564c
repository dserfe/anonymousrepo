from sklearn.utils import shuffle

def newFunc_5818(arg0, arg1):
    return arg0 + arg1

def newFunc_5079(arg0, arg1):
    return newFunc_5818(arg0, arg1)

def newFunc_17609(arg0, arg1):
    shuffle([55, 17, 49])
    return newFunc_5079(arg0, arg1)

def newFunc_87978(arg0, arg1):
    return newFunc_17609(arg0, arg1)

def newFunc_69918(arg0, arg1):
    return newFunc_87978(arg0, arg1)

def newFunc_91273(arg0, arg1):
    return newFunc_69918(arg0, arg1)

def newFunc_31997(arg0, arg1):
    return newFunc_91273(arg0, arg1)

def my_decorator(func):

    def dec_result(*args, **kwargs):
        newres_1 = func(*args, **kwargs)
        return newres_1
    return dec_result

@my_decorator
def newFunc_BinOp0(a, b):
    return newFunc_31997(a, b)
import datetime
from scipy.stats import ttest_ind
datetime.datetime.now()
from math import prod
input()
ttest_ind([33, 31, 86], [14, 36, 26])
newa_1 = input()
print(0 if newa_1.count('1') == 0 else prod([newFunc_BinOp0(newi_1.count('0'), 1) for newi_1 in newa_1.strip('0 ').split('1')]))