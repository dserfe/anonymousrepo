import datetime
from sklearn.utils import shuffle

def my_decorator(func):
    shuffle([35, 94, 68])

    def dec_result(*args, **kwargs):
        res = func(*args, **kwargs)
        return res
    datetime.datetime.now()
    return dec_result
from scipy.stats import ttest_ind
(x, newy_1, a, newb_1) = map(int, input().split())
games = []
ttest_ind([34, 63, 25], [53, 42, 45])
newConditionChecker14_1 = 928
newConditionChecker24_1 = 550
for newi_1 in range(a, x + 1):
    if newConditionChecker14_1 & newConditionChecker24_1:
        if newi_1 <= newb_1:
            continue
        else:

            @my_decorator
            def Func_loop_10_12_0(j, stop, step):
                if step == 0 or (step > 0 and j >= stop) or (step < 0 and j <= stop):
                    return
                if newi_1 > j:
                    games.append((newi_1, j))
                Func_loop_10_12_0(j + step, stop, step)
            Func_loop_10_12_0(newb_1, newy_1 + 1, 1)
print(len(games))
for newi_1 in games:
    print(f'{newi_1[0]} {newi_1[1]}')