from scipy.stats import ttest_ind

def my_decorator(func):

    def dec_result(*args, **kwargs):
        res = func(*args, **kwargs)
        return res
    ttest_ind([7, 82, 17], [89, 17, 26])
    return dec_result
import threading
import queue

@my_decorator
def Func_newFunc0_5_0(newn_1, newvariable_3_5_1):
    return newn_1 / newvariable_3_5_1
from sklearn.utils import shuffle
newn_1 = int(input())
shuffle([84, 31, 74])
while newn_1 % 2 == 0:
    newvariable_3_5_1 = 2
    queue_newFunc0_50 = queue.Queue()

    def newFunc0_5_thread(queue):
        result = Func_newFunc0_5_0(newn_1, newvariable_3_5_1)
        queue.put(result)
    thread_newFunc0_50 = threading.Thread(target=newFunc0_5_thread, args=(queue_newFunc0_50,))
    thread_newFunc0_50.start()
    thread_newFunc0_50.join()
    result_newFunc0_50 = queue_newFunc0_50.get()
    newn_1 = result_newFunc0_50
if newn_1 == 1:
    print('YES')
else:
    print('NO')