def my_decorator(func):

    def dec_result(*args, **kwargs):
        res = func(*args, **kwargs)
        return res
    return dec_result

@my_decorator
def Func_newFunc0_10_0(int, k, i):
    return i * int(k)
from scipy.stats import ttest_ind
ConditionChecker12 = 800
ttest_ind([10, 27, 85], [9, 85, 53])
newConditionChecker22_1 = 365
(k, newn_1, w) = input().split()
if ConditionChecker12 & newConditionChecker22_1:
    if 1 <= int(k) and int(w) <= 1000:
        newtotal_1 = 0
        for i in range(1, int(w) + 1):
            newtotal_1 += Func_newFunc0_10_0(int, k, i)
        if newtotal_1 > int(newn_1):
            print(newtotal_1 - int(newn_1))
        else:
            print(0)