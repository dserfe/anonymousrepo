import threading
import queue
import numpy as np

def Func_newFunc0_12_0(variable_3_12, a):
    return a - variable_3_12
(a, b) = map(int, input().split())
newc_1 = 0
newConditionChecker15_1 = 451
ConditionChecker25 = 633
LoopChecker15 = 219
LoopChecker25 = 218
for LoopIndexOut in range(LoopChecker15 // LoopChecker25):
    for i in range(2):
        newc_1 += np.max(np.array([a, b]))
        if newConditionChecker15_1 & ConditionChecker25:
            if a >= b:
                variable_3_12 = 1
                queue_Func_newFunc0_12_00 = queue.Queue()

                def Func_newFunc0_12_0_thread(queue):
                    result = Func_newFunc0_12_0(variable_3_12, a)
                    queue.put(result)
                thread_Func_newFunc0_12_00 = threading.Thread(target=Func_newFunc0_12_0_thread, args=(queue_Func_newFunc0_12_00,))
                thread_Func_newFunc0_12_00.start()
                thread_Func_newFunc0_12_00.join()
                result_Func_newFunc0_12_00 = queue_Func_newFunc0_12_00.get()
                a = result_Func_newFunc0_12_00
            else:
                b = b - 1
print(newc_1)