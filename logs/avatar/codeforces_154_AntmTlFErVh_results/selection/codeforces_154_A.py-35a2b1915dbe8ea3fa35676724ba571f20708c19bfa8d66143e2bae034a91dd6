import threading
import queue

def Func_newFunc0_19_0(min, ans, b, a):
    return ans + min(a, b)
import numpy as np
s = input()
n = int(input())
ans = 0
ConditionChecker18 = 299
newConditionChecker28_1 = 517
for i in range(n):
    x = input()
    (a, b) = (0, 0)
    for j in s:
        if ConditionChecker18 & newConditionChecker28_1:
            if j == x[0]:
                a = a + 1
            elif j == x[1]:
                b = b + 1
            else:
                ans = ans + np.min(np.array([a, b]))
                (a, b) = (0, 0)
    queue_Func_newFunc0_19_00 = queue.Queue()

    def Func_newFunc0_19_0_thread(queue):
        result = Func_newFunc0_19_0(min, ans, b, a)
        queue.put(result)
    thread_Func_newFunc0_19_00 = threading.Thread(target=Func_newFunc0_19_0_thread, args=(queue_Func_newFunc0_19_00,))
    thread_Func_newFunc0_19_00.start()
    thread_Func_newFunc0_19_00.join()
    result_Func_newFunc0_19_00 = queue_Func_newFunc0_19_00.get()
    ans = result_Func_newFunc0_19_00
print(ans)