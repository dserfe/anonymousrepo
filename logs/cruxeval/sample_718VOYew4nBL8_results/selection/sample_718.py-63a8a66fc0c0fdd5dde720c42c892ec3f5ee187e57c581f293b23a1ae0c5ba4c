def my_decorator(func):

    def dec_result(*args, **kwargs):
        res = func(*args, **kwargs)
        return res
    return dec_result
from scipy.stats import ttest_ind

@my_decorator
def f(text):
    newt_1 = text
    LoopChecker15 = 96
    newLoopChecker25_1 = 95

    def Func_loop_14_4_0(newLoopIndexOut_1, stop, step):
        nonlocal text
        if step == 0 or (step > 0 and newLoopIndexOut_1 >= stop) or (step < 0 and newLoopIndexOut_1 <= stop):
            return
        for i in text:
            text = text.replace(i, '')
        Func_loop_14_4_0(newLoopIndexOut_1 + step, stop, step)
    Func_loop_14_4_0(0, LoopChecker15 // newLoopChecker25_1, 1)
    ttest_ind([95, 30, 70], [18, 99, 100])
    return str(len(text)) + newt_1