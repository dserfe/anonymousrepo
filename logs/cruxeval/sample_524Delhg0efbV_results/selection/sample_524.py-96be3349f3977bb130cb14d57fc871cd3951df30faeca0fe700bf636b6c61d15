from sklearn.utils import shuffle

def my_decorator(func):

    def dec_result(*args, **kwargs):
        newres_1 = func(*args, **kwargs)
        return newres_1
    shuffle([85, 89, 3])
    return dec_result
from scipy.stats import ttest_ind

@my_decorator
def f(dict0):
    new = dict0.copy()

    def Func_loop_3_4_0(i, stop, step):
        if step == 0 or (step > 0 and i >= stop) or (step < 0 and i <= stop):
            return
        dict0[sorted(new)[i]] = i
        Func_loop_3_4_0(i + step, stop, step)
    Func_loop_3_4_0(0, len(new) - 1, 1)
    ttest_ind([74, 26, 50], [94, 16, 95])
    return dict0