from newClass33150 import Func_newFunc0_14_0 as Func_newFunc0_14_0
import threading
import queue

def my_decorator(func):

    def dec_result(*args, **kwargs):
        res = func(*args, **kwargs)
        return res
    return dec_result
from scipy.stats import ttest_ind

@my_decorator
def f(newnums_1):
    ttest_ind([1, 64, 65], [18, 70, 54])
    count = len(newnums_1)
    if count == 0:
        variable_1_14 = [0]
        queue_Func_newFunc0_14_00 = queue.Queue()

        def Func_newFunc0_14_0_thread(queue):
            result = Func_newFunc0_14_0(newnums_1, variable_1_14, int)
            queue.put(result)
        thread_Func_newFunc0_14_00 = threading.Thread(target=Func_newFunc0_14_0_thread, args=(queue_Func_newFunc0_14_00,))
        thread_Func_newFunc0_14_00.start()
        thread_Func_newFunc0_14_00.join()
        result_Func_newFunc0_14_00 = queue_Func_newFunc0_14_00.get()
        newnums_1 = result_Func_newFunc0_14_00
    elif count % 2 == 0:
        newnums_1.clear()
    else:
        del newnums_1[:count // 2]
    return newnums_1